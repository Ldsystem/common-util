# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Publish Maven Central

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        server-id: maven-central-release # Value of the distributionManagement/repository/id field of the pom.xml
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD
        gpg-private-key: ${{ secrets.MAVEN_SIGNGING_KEY }}
        gpg-passphrase: MAVEN_GPG_PASSPHRASE

    # set version
    - name: Set parent version
      run: mvn versions:set -DnewVersion=${{ github.event.release.tag_name }}
    # publish parent pom
    - name: Publish parent POM
      run: mvn -P release --batch-mode deploy -DskipTests
      env: 
        MAVEN_USERNAME: ${{ vars.MVN_CENTRAL_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MVN_CENTRAL_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_SIGNING_KEY_PASSPHRASE }}

    # publish common-lang
    - name: Publish lang
      run: mvn -f ./lang/pom.xml -P release --batch-mode deploy -Drevision=${{ github.event.release.tag_name }} -DskipTests
      env: 
        MAVEN_USERNAME: ${{ vars.MVN_CENTRAL_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MVN_CENTRAL_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_SIGNING_KEY_PASSPHRASE }}
    # publish common-json
    - name: Pulish json
      run: mvn -f ./json/pom.xml -P release --batch-mode deploy -Drevision=${{ github.event.release.tag_name }} -DskipTests
      env: 
        MAVEN_USERNAME: ${{ vars.MVN_CENTRAL_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.MVN_CENTRAL_PASSWORD }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_SIGNING_KEY_PASSPHRASE }}
